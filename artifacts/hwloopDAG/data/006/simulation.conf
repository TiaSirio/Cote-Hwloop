### File containing main configuration parameters of the simulation

## Simulation parameters - Simulation side
# Number of instances of satellites simulated
satellite=6
# Number of jobs for each instance to execute
jobs=8
# Number of physical nano-satellites for multithreading simulation
physicalInstances=1
orbitDuration=5800.0
radiationErrorRatio=0
# Type of job in the simulation
# 0 - Multiple jobs configuration
# 1 - Single job configuration
singleJob=0
# Update step duration of the simulation (measured in seconds)
timeToUpdateTheSimulation=0.0001
# timeToUpdateTheSimulation=0.00002

## Inner simulation parameters
# (Vmp)
energyHarvestMaximumVolt=7.0290
# (Imp)
#energyHarvestMaximumCurrent=1.0034
# Sum of solar panels
energyHarvestMaximumCurrent=1.120
# Only considering one solar cell
# Total capacitance of the capacitor bank (C)
energyStorageMaximumCapacity=5.0
# Equivalent series resistance of the capacitor bank (Resr)
energyStorageEsr=0.168

## Maximum number of attempts when trying to connect in SSH
maxNumberOfAttempts=5

## Parameter for fake simulation
# SSH of the fake satellite
sshFakeSatellite=fakeCubesatsim
# Directory in fake satellite
dirOnFakeSatellite="simulation/"
# Reaching home in fake satellites
reachingHomeInFakeSatellites="/home/cubesatsim/"
maxNumberOfFake=256


## Simulation parameters - Satellite side
# The possible names are commandReceiverRadiation.py, commandReceiverRadiationDemo.py and commandReceiver.py - The first one is more suited in radiation context, the second one is more demo purpose
# commandReceiverRadiationEvaluation.py is used for our evaluation
typeOfCommandReceiverUsed=commandReceiverRadiation.py
#typeOfCommandReceiverUsed=commandReceiverRadiationEvaluation.py
# Choice the type pf fault injected when simulating the radiation:
# 0 - Corrupt a random branch instruction in the executable
# 1 - Flip a random bit in the executable
# 2 - Random choice between the precedent two
typeOfRadiationFault=1
# Sometimes the radiated program make the satellite crash, for that reason is useful to stop it after a defined amount of time
#maxTimeBeforeStopRadiatedProgram=3
maxTimeBeforeStopRadiatedProgram=10

## Inner scripts to handle faulty tasks and execution for all or sequential inputs
outputCleanerBash="outputsCleaner.sh"
faultCreatorBash="createTaskFault.sh"
executeFaultedTaskBash="executeTaskFault.sh"
executeFaultedTaskAllInputsBash="executeTaskFaultForAllInputs.sh"
executeFaultedTaskSequentialInputsBash="executeTaskFaultForSequentialInputs.sh"
executeTaskAllInputsBash="runTaskForAllInputs.sh"
executeTaskSequentialInputsBash="runTaskForSequentialInputs.sh"
executeTaskMultipleTimesBash="runTaskMultipleTimes.sh"
makeForEveryTask="makeInEverySubdir.sh"
cleanForEveryTask="cleanInEverySubdir.sh"
startScriptsOnTheSatellite="startSatelliteScripts.sh"
startFakeScriptsOnTheSatellite="startFakeSatelliteScript.sh"
stopSatelliteScripts="stopSatelliteScripts.sh"
stopFakeSatelliteScripts="stopFakeSatelliteScripts.sh"
startFakeSatelliteScriptsFromSim="fakeRunPhysicalInstances.sh"

## Inner scripts to configure cubesat for starting simulation and stop the program started
configureCubeSatSim="configureCubeSatSim.sh"
configureCubeSatSimMultipleSatellites="hwloopConfigurePhysicalSatellites.sh"
stopCubeSatSimPrograms="stopSatellitePrograms.sh"
stopCubeSatSimProgramsMultipleSatellites="hwloopStopPhysicalSatellites.sh"
generateTaskConfFile="tasksConfGenerator.sh"
generateMapperFile="mapperGenerator.sh"
hwloopSingleThreadSimulation="hwloopDAG.sh"
hwloopSingleThreadSimulationDemo="hwloopDemo.sh"
hwloopMultiThreadSimulation="hwloopMMul.sh"
processSingleThreadSimulation="process_hwloop_logs_dag.sh"
processSingleThreadSimulationDemo="process_hwloop_logs_demo.sh"
processMultiThreadSimulation="process_hwloop_logs_mmul.sh"
plotsSingleThreadSimulation="plots_generation_dag_hwloop.sh"
plotsSingleThreadSimulationDemo="plots_generation_demo_hwloop.sh"
plotsMultiThreadSimulation="plots_generation_mmul_hwloop.sh"


## Directories to move inside simulation
execDir="cexec/"
scriptsDir="scripts/"
fromScriptsToSimScripts="cube_sat_scripts/sim/"
plotDir="../plots/"
dirSims="../artifacts/"
simDir="sim/"
fakeDir="fake/"

## Directories to move satellite side
pathFromRootToDirectoryBeforeSimulationFiles="/home/pi/CubeSatSim/"
simulationFilesDirectory="simulationFiles/"
faultInjectionProgramDir="chaosduck/"
fileToStoreNonFunctionalData="non_func_data.txt"
fileToStorePayloadData="non_func_payload.txt"
pathFromBeforeSimulationFilesToProcessedData="simulationFiles/nonFuncData"
pathFromBeforeSimulationFilesToSimulationScripts="simulationFiles/cexec/"

## Directories of logs and processed logs
logNotProcessed="logs/"
logProcessed="logsProcessed/"
dirData="data/"
lastRunBackup="last_run_backup/"
logProcessedCoverage="coverage/"
logProcessedLatency="latency/"
logProcessedState="state/"
logProcessedTaskConsumption="task_consumption/"
logProcessedSatConsumption="consumption/"
logProcessedJob="jobs_position/"
logProcessedErrors="errors_per_satellite/"
logProcessedJobsCompleted="jobs_completed/"
logProcessedTime="time/"

## Single-thread and multi-thread simulations
simulationDAG="hwloopDAG/"
simulationDemo="hwloopDemo/"
simulationMMul="hwloopMMul/"

## Directories of generated plots
dirToGenerateCoverage="coverage/"
dirToGenerateLatency="latency/"
dirToGenerateState="state/"
dirToGenerateStatePercentage="state_percentage/"
dirToGenerateTaskConsumption="mean_consumption_per_task/"
dirToGenerateSatConsumption="consumption_total/"
dirToGenerateConsumptionPerJob="consumption_per_job/"
dirToGenerateConsumptionPerTask="consumption_per_task/"
dirToGenerateJob="jobs_position/"
dirToGenerateErrors="errors_per_satellite/"
dirToGenerateErrorsPerSat="errors_per_job/"
dirToGenerateErrorsPercentage="errors_percentage_per_satellite/"
dirToGenerateJobsCompleted="jobs_completed/"
dirToGenerateTotalTime="total_time/"
dirToGenerateTimePerJob="time_per_job/"
dirToGenerateTimePerTask="time_per_task/"
dirToGenerateMeanTimePerTask="mean_time_per_task/"


## Name of the different configuration files used
mapperFileName="mapper.txt"
tasksYamlFileName="tasks.yaml"
satelliteInstancesYamlFileName="satelliteInstances.yaml"
simulationConfFileName="simulation.conf"
tasksUsedConf="tasksUsed.conf"
tasksExecutablesConf="tasksExecutables.conf"
tasksDatasetsConf="tasksDatasets.conf"
tasksResultsConf="tasksResults.conf"
tasksTypeOfFileConf="tasksTypeOfFile.conf"
physicalSatelliteConf="physicalSatellite.conf"
physicalSatelliteToUseConf="phSatToUse.conf"
checkAddressSatelliteConf="checkAddressSatellite.conf"
execDirPhysicalSatelliteConf="execDirPhysicalSatellite.conf"
nonFuncPhysicalSatelliteConf="nonFuncOnPhysicalSatellite.conf"
payloadPhysicalSatelliteConf="payloadOnPhysicalSatellite.conf"
repeatProgramsConf="tasksRepeating.conf"


## Parameters for MQTT server
serverMQTT="broker.hivemq.com"
#serverMQTT="test.mosquitto.org"
portMQTT="1883"

## Client IDs
subscriberID="retrieve_satellite_data_hwloop_simulation"
publisherID="execute_commands_hwloop_simulation"
satelliteID="satellite_hwloop_simulation"

## Message to handle the flux
commandExecute="execute"
noDataMessage="nodata"
errorMessage="ERROR"

## Topics used to transfer the messages between the simulation and the satellites
subscribeTopic="cubesatsim/#"
subscribeTopicMultithread="cubesatsim/#"
#subscribeTopicMultithread="cubesatsim/+/+/"
topicCommands="cubesatsim/commands/"
topicAppData="cubesatsim/appdata/"
topicDuration="cubesatsim/duration/"
topicNonFuncData="cubesatsim/nonfuncdata/"
topicPayload="cubesatsim/payload/"